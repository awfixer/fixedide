name: Code Coverage

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "**"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}-${{ github.ref_name == 'main' && github.sha || 'anysha' }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  RUST_BACKTRACE: 1

jobs:
  coverage:
    name: Generate Code Coverage
    runs-on: ubuntu-latest
    if: github.repository_owner == 'zed-industries'
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Install Linux dependencies
        run: ./script/linux

      - name: Install llvm-tools-preview
        run: rustup component add llvm-tools-preview

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@56ab7930c591507f833cbaed864d201386d518a8 # v2
        with:
          tool: cargo-llvm-cov

      - name: Cache dependencies
        uses: swatinem/rust-cache@9d47c6ad4b02e050fd481d890b2ea34778fd09d6 # v2
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - name: Generate coverage report
        run: |
          cargo llvm-cov --workspace \
            --all-targets \
            --ignore-filename-regex '(tests?/|examples?/)' \
            --lcov \
            --output-path lcov.info

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@b5c033ce5910808d6b61b37d4b1823e2f50bc039 # v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info
          fail_ci_if_error: false
          verbose: true

      - name: Generate HTML coverage report
        if: always()
        run: |
          cargo llvm-cov --workspace \
            --all-targets \
            --ignore-filename-regex '(tests?/|examples?/)' \
            --html \
            --output-dir target/coverage

      - name: Upload coverage artifacts
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: coverage-report
          path: target/coverage/
          retention-days: 7

      - name: Comment PR with coverage
        if: github.event_name == 'pull_request'
        continue-on-error: true
        run: |
          COVERAGE=$(cargo llvm-cov --workspace --all-targets --ignore-filename-regex '(tests?/|examples?/)' 2>&1 | \
            grep -oP 'TOTAL.*\K[0-9]+\.[0-9]+(?=%)' | head -1 || echo "N/A")

          cat << EOF > coverage-comment.md
          ## Code Coverage Report

          **Total Coverage:** ${COVERAGE}%

          ðŸ“Š [View detailed coverage report](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})

          Coverage report generated by cargo-llvm-cov
          EOF

          # This would require additional setup for commenting on PRs
          # For now, just output to the job summary
          cat coverage-comment.md >> $GITHUB_STEP_SUMMARY
